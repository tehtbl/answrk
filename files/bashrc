# need HOST variable
test -z "${HOST}" && HOST=`hostname` # && echo "set HOST=${HOST}"

# https://misc.flogisoft.com/bash/tip_colors_and_formatting
DARK_BLACK="\[\e[0;49;30m\]"
DARK_RED="\[\e[0;49;31m\]"
DARK_GREEN="\[\e[0;49;32m\]"
DARK_YELLOW="\[\e[0;49;33m\]"
DARK_BLUE="\[\e[0;49;34m\]"
DARK_MAGENTA="\[\e[0;49;35m\]"
DARK_TURKEY="\[\e[0;49;36m\]"
DARK_WHITE="\[\e[0;49;37m\]"
DARK_GREY="\[\e[0;49;90m\]"
CLEAR="\[\e[0;0m\]"

# # if we can't find an agent, start one, and restart the script.
# if [ ! -S ~/.auth_sock_ssh ]; then
#   eval $(ssh-agent)
#   ln -sf "$SSH_AUTH_SOCK" ~/.auth_sock_ssh
# fi
# export SSH_AUTH_SOCK=~/.auth_sock_ssh
# ssh-add -l > /dev/null || ssh-add

# GPG Agent
export GPG_TTY=$(tty)
eval $(gpg-agent --homedir /root/.gnupg --daemon --allow-preset-passphrase &> /dev/null)

# lang settings
export LC_ALL="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
export LANG="en_US.UTF-8"

# prompt
RETVAL="${DARK_WHITE}[\$?]"
USER_HOST="${DARK_RED}\u"
FULLPATH="${DARK_BLUE}\w"
PS1="${DARK_YELLOW}docker:${USER_HOST} ${FULLPATH}${CLEAR} \$ "
PS2="\[\a\]"$PS2

# aliases
alias ls='ls --color -F --group-directories-first'
alias ll='LC_ALL="C.UTF-8" ls -lah --color -F --group-directories-first'

alias ans-play='ansible-playbook'
alias ans-vault='ansible-vault'
alias ans-enc_str='# echo "TODO: ansible-vault enc str"'

# Helpers
function cd() {
  command cd "$@" || return

  MYVARFILE="vars.yml"
  if [[ -f "${MYVARFILE}" ]]
  then
    export ANS_MYVARFILE="$(pwd)/${MYVARFILE}"
    echo -en "successfully exported ${DARK_GREEN}\$ANS_MYVARFILE${CLEAR} with ${DARK_GREEN}${ANS_MYVARFILE}${CLEAR}"; echo
    echo -en "run plays via:\n  ${DARK_YELLOW}ansible-playbook /playbooks/00_Playbooks/02_Provisioning/0{0,1,2,3}*${CLEAR}"; echo
  else
    ls -al
  fi
}

echo -e "
${DARK_GREEN}-------------------------------------------------------------------------------${DARK_YELLOW}
eval \$(ssh-agent) && ssh-add

export ANS_VAULT_PW=
export PRMX_PASS=

ansible-galaxy install --roles-path /etc/ansible/roles_ext -r /playbooks/00_Playbooks/02_Provisioning/local_requirements.yml
${DARK_GREEN}-------------------------------------------------------------------------------${CLEAR}
"
